To improve the data management capabilities and user experience within the Lead Workspace by providing administrators with full editing control over lead data, ensuring key identifiers from imports are visible, and aligning the data entry process with specific business rules for sensitive information like email addresses.

Problem
The current Lead Workspace has some limitations that hinder efficiency and data accuracy:

Missing UID: The UID imported from the CSV file is not displayed on the LeadDataCard. This makes it difficult for users to trace a lead back to its original source file for verification or auditing purposes.

No Admin Editing: Administrators do not have a direct way to edit a lead's information from the workspace. If they spot an error in a field like the phone number, country, or intake, they cannot correct it, leading to persistent data inaccuracies.

Inflexible Email Handling: The system currently requires an email for every lead, sometimes inserting a placeholder. The desired workflow is for the email field to remain blank until a counselor or admin explicitly adds one, ensuring that only verified email addresses are stored.

Possible Solution
To address these issues, the following enhancements should be implemented in LeadWorkspace.tsx and the corresponding backend files:

Display UID on Lead Data Card:

Modify the LeadDataCard component in LeadWorkspace.tsx.

Add a new field to display the UID alongside the internal Lead ID. The display should show both:

Lead ID: LD-{lead.id}

External UID: {lead.uid} (This should be hidden if no UID exists).

Implement Admin Edit Functionality:

In LeadWorkspace.tsx, introduce a conditional "Edit Lead" button that is only visible to users with the admin role.

This button will trigger a dialog/modal containing a form with all editable lead fields (Name, Email, Phone, Country, Course, Intake, Source, Passport Status, etc.), pre-populated with the lead's current data.

Utilize the existing PUT /api/leads/:id endpoint to submit the form data.

On successful submission, the form should close, the local data should be refreshed automatically, and a success notification should be displayed.

Update Email Field Logic:

Modify the leads table schema in shared/schema.ts to allow the email column to be nullable (i.e., not required).

Update the CSV import logic in server/routes.ts to insert a null or empty value if the email field in the CSV is blank, removing the current placeholder logic.

Ensure the new admin "Edit Lead" form allows for adding or updating the email address.

Expected Outcome
Upon completion, the Lead Workspace will be significantly more functional and aligned with business needs:

Enhanced Traceability: Both the internal Lead ID and the external UID will be clearly visible, allowing for easy cross-referencing.

Empowered Administrators: Admins will be able to instantly correct data inaccuracies directly within the lead's workspace, ensuring high-quality data across the CRM.

Improved Data Integrity: The email field will be managed according to business rules, preventing the storage of placeholder or invalid information and ensuring that only intentionally entered data is present.

